<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards for Autogrid">
	<description>A custom set of code standard rules to check for WordPress plugins.</description>

	<!-- How to scan -->
	<arg value="sp"/><!-- Show sniff and progress -->
	<arg name="basepath" value="./"/><!-- Strip the file paths down to the relevant bit -->
	<arg name="extensions" value="php"/>
	<arg name="parallel" value="10"/><!-- Enables parallel processing when available for faster results. -->
	<arg name="cache" value=".phpcs.cache"/>

	<!-- What to scan -->
	<file>./</file>
	<exclude-pattern>*/\.github/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/assets/*</exclude-pattern>
	<exclude-pattern>*/build/*</exclude-pattern>
	<exclude-pattern>*/languages/*</exclude-pattern>
	<exclude-pattern>*/lib/*</exclude-pattern>

	<rule ref="WordPress">
        <!-- Allow short ternary syntax and short arrays and short open tag -->
        <exclude name="Generic.Arrays.DisallowShortArraySyntax" />
        <exclude name="Universal.Arrays.DisallowShortArraySyntax.Found" />
        <exclude name="WordPress.PHP.DisallowShortTernary.Found" />
        <exclude name="Generic.Commenting.DocComment.MissingShort" />

        <!-- Disable dot of end string docblock -->
        <exclude name="Squiz.Commenting.InlineComment.InvalidEndChar" />

        <exclude name="WordPress.PHP.YodaConditions" />

        <exclude name="WordPress.Files.FileName.InvalidClassFileName" />
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />

        <exclude name="Generic.Files.LineEndings"/>
    </rule>

    <!-- Disable comments blocks -->
    <rule ref="WordPress-Docs">
        <exclude name="Squiz.Commenting.FileComment.Missing" />
        <exclude name="Squiz.Commenting.FileComment.MissingPackageTag" />
        <exclude name="Squiz.Commenting.ClassComment.Missing" />
        <exclude name="Squiz.Commenting.FunctionComment.Missing" />
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType" />
        <exclude name="Squiz.Commenting.VariableComment.Missing" />
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamComment" />
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamTag" />
    </rule>

    <!-- Disallow long array syntax. -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax.Found"/>

    <!-- Prohibit Yoda Conditions expressions -->
    <rule ref="Generic.ControlStructures.DisallowYodaConditions"/>

    <!-- Forbidden functions -->
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array">
                <element key="delete" value="unset"/>
                <element key="print" value="echo"/>
                <element key="create_function" value="null"/>
                <element key="sizeof" value="count"/>
                <!-- <element key="var_dump" value="null"/> duplicate of WP rule-->
                <element key="print_r" value="null"/>
                <element key="eval" value="null"/>
                <element key="compact" value="null"/>
            </property>
        </properties>
    </rule>

    <!-- AutoEscaped functions -->
    <rule ref="WordPress.Security.EscapeOutput">
        <properties>
            <property name="customAutoEscapedFunctions" type="array">
                <element value="get_block_wrapper_attributes" />
                <element value="rd_render_attributes" />
                <element value="rd_get_picture_html" />
            </property>
        </properties>
    </rule>

	<!-- Check for cross-version support for PHP 7.0 and higher. -->
	<config name="testVersion" value="7.0-"/>

	<!-- Check PHP version compatibility -->
	<rule ref="PHPCompatibilityWP"/>
	<!-- Rules: WordPress Coding Standards -->
	<config name="minimum_wp_version" value="6.4"/>
</ruleset>
